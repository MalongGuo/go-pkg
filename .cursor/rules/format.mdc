Title: Go 代码格式与结构规则

Overview: 统一 Go 代码风格, 保证可读性与一致性, 便于 IDE 实时提示。

1. 声明顺序
- 接口(interface)
- 结构体(struct)
- 结构体约束(如: var _ Interface = (*Struct)(nil))
- 结构体方法(先导出, 后非导出; 语义相近聚合)
- 构造/工厂/辅助 new 方法(先导出, 后非导出)

2. 注释与文档
- 包级注释简述用途与能力
- 导出符号使用标准 GoDoc 注释, 以符号名开头, 说明参数与返回值
- 注释强调“为什么”, 避免冗余实现细节

3. 导入规范
- 分组: 标准库 | 第三方 | 本地模块; 组间空行
- 严禁未使用导入; 保持稳定顺序

4. 格式化与风格
- 强制 gofmt/gofumpt
- 保持现有缩进风格, 不混用空格与制表符
- 适度换行避免超长行, 操作符两侧留空格

5. 命名
- 导出标识符使用 PascalCase, 非导出使用 camelCase
- 函数名使用动词/动宾短语, 变量名语义清晰; 禁用 1-2 字母名

6. 错误处理
- 错误类型实现 error 接口; 如需携带底层错误, 提供 Cause/Unwrap
- 错误构造集中在工厂函数(如 New/WithMessage/WithMessagef)

7. 上下文键
- 推荐: 使用自定义未导出类型作为 context 键, 避免冲突
- 如业务必须用字符串键, 需在局部明确约束并按需使用 nolint 定位抑制

8. 依赖与模块
- 使用 go get 添加依赖, go mod tidy 清理
- 代理受限时可使用 GOPROXY=direct 与固定间接依赖版本

9. 测试
- 测试实现置于 *_test.go, 与生产代码解耦
- 覆盖构造函数、接口契约、边界与错误分支

10. Web 服务示例
- 路由注册示例可置于测试或示例入口; 测试中避免启动真实监听
- 可选参数用 flag 解析, 提供合理默认值

执行规范
- 在提交前运行: gofmt/gofumpt, go vet/staticcheck, go test ./...
- 提交信息: 简洁明确, 中文简体, 遵循本仓库提交规范

